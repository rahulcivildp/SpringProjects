	dropDownBrands = $("#brands");
	dropDownCategories = $("#categories");
	
	$(document).ready(function(){
		
		$("#shortDescription").richText();
		$("#fullDescription").richText();
		
		dropDownBrands.change(function(){
			dropDownCategories.empty();
			getCategories();
		});
		getCategories();
		
		
		$("input[name='extraImage-']").each(function(index){
			$(this).change(function(){
				showImageExtraThumbnail(this, index);
			})
		})
		
		$("#extraImage-").change(function() {
			fileSize = this.files[0].size;
			imageSizeShort = imageSizeExtra * 1024;
			
			if (fileSize > imageSizeShort) {
				this.setCustomValidity("You must choose an image less than " + imageSizeShort + " " + sizeScaleExtra + "!");
				this.reportValidity();
			} else {
				this.setCustomValidity("");
				showImageExtraThumbnail(this);
			}
		})
	});
	
	function showImageExtraThumbnail(fileInput, index) {
		var file = fileInput.files[0];
		var reader = new FileReader();
		reader.onload = function(e) {
			$("#extraThumbnail" + index).attr("src", e.target.result);
		}
		
		reader.readAsDataURL(file);
		
		addExtraImageSection(index);
	}
	
	function addExtraImageSection(index) {
		
		html = `<div class="col border m-3 p-2">
				<div><label class="mb-3">Extra Images: ${index}</label></div>
				<div>
					<input type="hidden" th:field="*{images}">
					<img class="img-thumbnail img-fluid" id="extraThumbnail-${index}" src="${imageThumbnailSRC}" alt="Photo ${index} Preview" style="max-width: 25% !important;"/>
				</div>
				<div class="mt-3">
					<input type="file" name="extraImage" id="extraImage" accept="image/png, image/jpeg" class="mb-2" onchange="showImageExtraThumbnail(this, ${index})"/>
				</div>
			</div>`;	
		$("#divProductImages").append(html);
	}
	
	function getCategories() {
		brandId = dropDownBrands.val();
		url = brandModuleURL + "/" + brandId + "/categories";
		
		$.get(url, function(responseJson) {
			$.each(responseJson, function(index, category) {
				$("<option>").val(category.id).text(category.name).appendTo(dropDownCategories);
			});
		})
	};
	
	function checkNameUnique(form) {
		url = "[[@{/products/check_name}]]";
		productName = $("#name").val();
		productId = $("#id").val();
		csrfVal = $("input[name='_csrf']").val();
		params = {id: productId, name: productName, _csrf: csrfVal};
			
		$.post(url, params, function(response) {
			if (response == "OK") {
				form.submit();
			} else if (response == "Duplicate") {
				showModelDialogue("Warning! ", response + " is provided: " + productName);
			} else {
				showModelDialogue("Error", "Unknown response from server.");
			}
		}).fail(function(){
			showModelDialogue("Warning! ", "Duplicate Name is provided: " + productName);
		});
		
		return false;
	};
	
	function showModelDialogue(title, message) {
		if (message != null) {
			$("#modalTitle").text(title);
			$("#modalBody").text(message);
			$("#modalDialogue").modal();
		};
	};/**
 * 
 */